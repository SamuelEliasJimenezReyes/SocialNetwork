// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork.Infraestructure.Persistence.Contexts;

#nullable disable

namespace SocialNetwork.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231029024251_Adding Relations")]
    partial class AddingRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Coments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PublicationID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PublicationID");

                    b.ToTable("Coments", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Friends", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Friends", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.FriendsComents", b =>
                {
                    b.Property<int>("ComentID")
                        .HasColumnType("int");

                    b.Property<int>("FriendID")
                        .HasColumnType("int");

                    b.HasKey("ComentID", "FriendID");

                    b.HasIndex("FriendID");

                    b.ToTable("FriendsComents", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Publications", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ComentID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Publications", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Coments", b =>
                {
                    b.HasOne("SocialNetwork.Core.Domain.Entites.Publications", "Publication")
                        .WithMany("Coments")
                        .HasForeignKey("PublicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.FriendsComents", b =>
                {
                    b.HasOne("SocialNetwork.Core.Domain.Entites.Coments", "Coments")
                        .WithMany("FriendComent")
                        .HasForeignKey("ComentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialNetwork.Core.Domain.Entites.Friends", "Friends")
                        .WithMany("FriendComents")
                        .HasForeignKey("FriendID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coments");

                    b.Navigation("Friends");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Coments", b =>
                {
                    b.Navigation("FriendComent");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Friends", b =>
                {
                    b.Navigation("FriendComents");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entites.Publications", b =>
                {
                    b.Navigation("Coments");
                });
#pragma warning restore 612, 618
        }
    }
}
